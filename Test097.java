/*===========================================================
  ■■■ 클래스 인스턴스 ■■■
  - 클래스 변수(static 변수)와 클래스 메소드(static 메소드)
=============================================================*/

//학생별로 국어점수, 영어점수, 수학점수를 입력받아
// 총점, 평균을 계산하는 프로그램을 구현한다.
//단, 클래스의 개념을 활용하여 작성할 수 있도록 한다.

//프로그램을 구성하는 클래스
// 1. Record 클래스
//	- 속성만 존재하는 클래스로 설계할 것~!!!
//
// 2. Sungjuk 클래스
//  - 인원 수를 입력받아, 입력받은 인원수 만큼
//    이름, 국어점수, 영어점수, 수학점수를 입력받고
//    총점과 평균을 산출하는 클래스로 설계할 것~!!!
//   · 속성 : 인원 수, Record 형태의 배열
//   · 기능 : 인원 수 입력, 상세 데이터 입력, 총점 및 평균 연산, 결과 출력
//
// 3. Test097 클래스
//	  - main() 메소드가 존재하는 외부클래스로 설계할 것~!!!

// 실행 예)
// 인원 수 입력(1~100): 102
// 인원 수 입력(1~100): -10
// 인원 수 입력(1~100): 3

// 1번째 학생의 이름 입력 : 서승균
// 국어 점수 : 90
// 영어 점수 : 80
// 수학 점수 : 70

// 1번째 학생의 이름 입력 : 채지윤
// 국어 점수 : 82
// 영어 점수 : 70
// 수학 점수 : 62

// 1번째 학생의 이름 입력 : 이찬호
// 국어 점수 : 98
// 영어 점수 : 88
// 수학 점수 : 78

// 서승균	90  80  70  240  xx.xx	2
// 채지윤   82  72  62  xxx  xx.xx	3
// 이찬호	98  88  78  xxx  xx.xx	1

// 계속하려면 아무 키나 누르세요...


//★★★★성적 클래스랑 레코드 클래스,,도 봐야된다★★★★
public class Test097
{
	public static void main(String[] args)
	{
		Sungjuk ob = new Sungjuk();
		ob.set();
		ob.input();
		ob.print();

	}
}

//실행결과
/*
인원 수 입력(1~100): 3
1번째 학생 이름 입력 : 일일
국어 점수 : 90
영어 점수 : 80
수학 점수 : 70
2번째 학생 이름 입력 : 이이
국어 점수 : 80
영어 점수 : 60
수학 점수 : 55
3번째 학생 이름 입력 : 삼삼
국어 점수 : 80
영어 점수 : 60
수학 점수 : 70

   일일  90  80  70  240   80.00
   이이  80  60  55  195   65.00
   삼삼  80  60  70  210   70.00
계속하려면 아무 키나 누르십시오 . . .
*/