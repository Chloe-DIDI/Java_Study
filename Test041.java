/*===========================================================
  ■■■ 실행 흐름의 컨트롤(제어문, 조건문과 반복문) ■■■
  - 반복문(while문) 실습
=============================================================*/

//1부터 100 까지의 정수 중에서
//짝수들의 합과 홀수들의 합을 따로 구분하여 계산한다.
//그리고 결과값을 출력한느 프로그램을 구현한다.
//단, 반복문은 while 문을 사용할 수 있도록 하며,
//조건 구문은 if 조건문을 사용하여 작성할 수 있도록 한다.

// 실행 예)
// 1부터 100까지의 정수 중
// 짝수의 합 : 2550
// 홀수의 합 : 2500
// 계속하라면 아무 키나 누르세요...

public class Test041
{
	public static void main(String[] args) 
	{
	
		// 주요 변수 선언
		int n=1;		//--1부터 100까지 1씩 증가할 변수
		int even=0;		//--짝수들의 누적합을 담을 변수
		int odd=0;		//--홀수들의 누적합을 담을 변수

		//연산 및 처리
		while (n<=100)
		{
			// 처리할 것은 먼저 처리하고 나중에 n++;
			// 그래서 처리
			//-- 짝수인지 홀수인지 판별하여 합을 누적
			if (n%2==0)			// 짝수인지 판별
			{
				even += n;
			}
			else if (n%2!=0)	 //홀수인지 판별
			{
				 odd += n;
			}
			else
			{
				System.out.println("판별 불가 데이터");
				return;
			}
				n++;
		}
		// 결과 출력

		System.out.println(" 1부터 100까지의 정수 중 ");
		System.out.println(" 짝수의 합 " + even );		
		System.out.println(" 홀수의 합 " + odd );

//내가 푼것
/*
		int n1=0;
		int n2=1;
		int sum1=0;	
		int sum2=0;

		// 연산 및 처리 (반복문 구성)
		while (n1<=100)
		{
			sum1 += n1;
			n1 += 2;
		}
		while (n2<=100)
		{
			sum2 += n2;
			n2 += 2;
		}

		System.out.println("1부터 100까지의 짝수의 합 : " + sum1);
		
		System.out.println("1부터 100까지의 홀수의 합 : " + sum2);
		*/

	}
}

//실행 결과
/*
1부터 100까지의 짝수의 합 : 2550
1부터 100까지의 홀수의 합 : 2500
계속하려면 아무 키나 누르십시오 . . .
*/
