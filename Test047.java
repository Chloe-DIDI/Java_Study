/*===========================================================
  ■■■ 실행 흐름의 컨트롤(제어문, 조건문과 반복문) ■■■
  - 반복문(while문) 실습
=============================================================*/

// 사용자로부터 임의의 두 정수를 입력받아
// 작은 수 부터 큰 수 까지의 합을 구하여
// 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
// 첫 번째 정수 입력 : 10
// 두 번째 정수 입력 : 20
// >> 10~20 까지의 합 : xxx
// 계속하려면 아무 키나 누르세요...


// 첫번째 정수 입력 : 10
// 두 번째 정수 입력 : 20
// >> 2~10 까지의 합 : xx
// 계속하려면 아무 키나 누르세요...

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;


public class Test047

{
	public static void main(String[] args) throws IOException

	{
		

		// ○ 주요 변수 선언
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int n;				//--루프 변수로 활용할 변수,,,루프=반복문 같은 말
		int su1, su2;		//--첫 번째, 두 번째 입력값을 담을 변수
		int result=0;		//--누적합을 담을 변수
		

		// ○ 연산 및 처리
		System.out.print("첫 번재 정수 입력 : ");
		su1 = Integer.parseInt(br.readLine());

		System.out.print("두 번재 정수 입력 : ");
		su2 = Integer.parseInt(br.readLine());

		// 입력받은 두 수의 크기 비교 및 자리 바꿈
		// 즉, su1이 su2 보다 큰 경우 두 수의 자리를 바꿀 수 있도록 처리

		if ( su1 > su2 )
		{
			//자리 바꿈
			su1=su1^su2;
			su2=su2^su1;
			su1=su1^su2;
		}

		n=su1;

		while (n<=su2)
		{
			result += n;
			n++;
		}

		//○결과 출력

		System.out.printf(" >> %d ~ %d 까지의 합 : %d\n", su1, su2, result);

		//실행 결과
		/*
		첫 번재 정수 입력 : 2
		두 번재 정수 입력 : 1
		 >> 1 ~ 2 까지의 합 : 3
		계속하려면 아무 키나 누르십시오 . . .
		*/
		
		
			// 반복 연산 수행
			// 반복 연산을 수행하기 전에
			// 작은 수를 따로 저장하여 루프 변수로 활용한다.
			// (결과 출력 과정에서 필요하기 때문에...)
			// 10
			// 2
			// 2 ~ 10	
		/*
		int a, b;		 // 변수 두개
		int c;			 //변수
		int sum=0;			 // 합

	
		System.out.print("첫번째 정수 입력 : ");
		a = Integer.parseInt(br.readLine());

		System.out.print("두번째 정수 입력 : ");
		b = Integer.parseInt(br.readLine());
		
		if (a>b)			//작은수가 먼저 오게 
		{	
			a = a^b;
			b = b^a;
			a = a^b;
		}

		c=a;

		while(c<=b)			//작은수부터 큰수까지 더하기
		{
			sum += c;
			c++;
		}
		System.out.printf(" >> %d ~%d 까지의 합 : %d\n", a, b, sum);
*/
	}
}